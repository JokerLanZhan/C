#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
#include <string.h>
#include <windows.h>
#include <stdlib.h>

int main()
{
	int i = 0;
	char password[20];
	for(i=0; i<3; i++)
	{
		printf("请输入密码：");
		scanf("%s\n", password);
		if(strcmp(password, "123456") == 0)// == 不能用来比较两个字符串是否相等，应该使用一个库函数 -strcmp
		{
			printf("登录成功\n");
			break;
		}
		else
		{
			printf("密码错误\n");
		}
	}
	if(3 == i)
	printf("三次密码均错误，退出程序\n");
	return 0;
}



//int main()
//{
//	//welcome to bit!!!!!
//	//###################
//	//w#################!
//	//we###############!!
//	//wel#############!!!
//	//...
//	//welcome ro bit!!!!!
//
//
//	//char arr = "abc";
//	//[a b c \0]
//	// 0 1 2 3 
//	//下标： 4 - 2
//	char arr1[] = "welcome to bit!!!!!";
//	char arr2[] = "###################";
//	int left = 0;
//	//int right = sizeof(arr1)/sizeof(arr1[0]) -2;
//	int right = strlen(arr1)-1;
//
//	while(left <= right)
//	{
//		arr2[left] = arr1[left];
//		arr2[right] = arr1[right];
//		printf("%s\n", arr2);
//		//休息一秒
//		Sleep(1000);
//		system("cls");//执行系统命令的一个函数 - cls :清空屏幕
//		left++;
//		right--;
//	}
//	printf("%s\n", arr2);
//	return 0;
//}



//int main()
//{
//	int arr[] = {1,2,3,4,5,6,7,8,9,10};
//	int k =7;
//	int sz = sizeof(arr)/sizeof(arr[0]);//计算元素个数
//	int left = 0;//左下标
//	int right = sz-1;//右下标
//
//	while(left <= right)
//	{
//		int mid = (left + right)/2;
//		if(arr[mid] > k)
//		{
//			right = mid-1;
//		}
//		else if(arr[mid] < k)
//		{
//			left = mid+1;
//		}
//		else
//		{
//			printf("找到了，下标是：%d\n", mid);
//			break;
//		}
//	}
//	if(left > right)
//	{
//		printf("找不到\n");
//	}
//	return 0;
//}



////买了一双鞋：500
////1 2 3 4 5 .... 500
////猜测价格：250 - 375
//int main()
//{
//	int arr[]={1,2,3,4,5,6,7,8,9,10};
//	int k = 17;
//	//写一个代码在arr数组（有序的）中找到7
//	int i = 0;
//	int sz = sizeof(arr)/sizeof(arr[10]);
//	for(i=0; i<sz; i++)
//	{
//		if(k == arr[i])
//		{
//			printf("找到了，下标是：%d\n", i);
//			break;
//		}
//	}
//	if(i == sz)
//		printf("找不到\n");
//	return 0;
//}



//int main()
//{
//	int i = 0;
//	int n = 0;
//	int ret = 1;
//	int sum = 0;
//	//1 + 2 + 6 = 9
//	for(n=1; n<=3; n++)
//	{
//		ret = ret * n;
//		//n的阶乘
//		sum = sum + ret;
//	}
//	//ret = 1*1 = 1
//	//ret = 1*1*2 = 2
//	//ret = 1*1*2*3 = 6
//	printf("sum = %d\n", sum);
//	return 0;
//}



////1！+2！+3！+...+10!
//int main()
//{
//	int i = 0;
//	int n = 0;
//	int ret = 1;
//	int sum = 0;
//	//1 + 2 + 6 = 9
//	for(n=1; n<=3; n++)
//	{
//		ret = 1;
//		for(i=1; i<=n; i++)
//		{
//			ret = ret * i;
//		}
//		//n的阶乘
//		sum = sum + ret;
//	}
//	//ret = 1*1 = 1
//	//ret = 1*1*2 = 2
//	//ret = 1*1*2*3 = 6
//	printf("sum = %d\n", sum);
//	return 0;
//}



////n的阶乘
//int main()
//{
//	int i = 0;
//	int n = 0;
//	int ret = 1;
//	scanf("%d", &n);
//	for(i=1;i<=n;i++)
//	{
//		ret = ret * i;
//	}
//	printf("ret = %d\n", ret);
//	return 0;
//}



//int main()
//{
//	int n, i;
//    unsigned long long factorial = 1;
//    printf("输入一个整数: ");
//    scanf("%d",&n);
//    // 如果输入是负数，显示错误
//    if (n < 0)
//        printf("Error! 负数没有阶乘jiechen");
//    else
//    {
//        for(i=1; i<=n; ++i)
//        {
//            factorial *= i;              // factorial = factorial*i;
//        }
//        printf("%d! = %llu", n, factorial);
//    }
//	return 0;
//}



//int main()
//{
//	int i = 1;
//	do
//	{
//		if(5 == i)
//			continue;
//		printf("%d ", i);
//		i++;
//	}
//	while(i<=10);
//
//	return 0;
//}



//int main()
//{
//	int i = 0;
//	int k = 0;
//	for(i = 0, k = 0; k=0; i++, k++)
//		k++;
//	return 0;
//}



//int main()
//{
//	int x,y;
//	for(x = 0, y = 0; x<2 && y<5; ++x, y++)
//	{
//		printf("hehe\n");
//	}
//	return 0;
//}



//int main()
//{
//	int i = 0;
//	int j = 0;
//	//
//	for(/*i=0*/; i<10; i++)
//	{
//		
//		for(/*j=0*/; j<10; j++)
//		{
//			printf("hehe\n");
//		}
//	}
//	//10*10 == 100
//	return 0;
//}



//int main()
//{
//	//1、for循环的初始化、调整、判断 都可以省略
//	//但是for循环的判断部分，如果被省略，那判断条件就是：恒为正，就一直循环
//	//2、如果不是非常熟练，建议大家不要随便省略
//	for(;;)
//	{
//		printf("hehe\n");
//	}
//	return 0;
//}



//int main()
//{
//	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
//	int i =0;
//	//建议for语句的控制变量的取值采用“前闭后开区间”写法。
//	// i<10中10的意义：10可以是10次循环 ，10次打印 ，10个元素
//	for(i=0;i<10;i++)//i=0就是闭区间；i<10就是开区间 - 前闭后开区写法
//	//for(i=0;i<=10;i++)//两边都是闭区间写法
//	{
//		printf("%d ",arr[i]);
//	}
//	return 0;
//}



//int main()
//{
//	int i = 0;
//	//不可在for循环体内修改循环变量，防止for循环失去控制。
//	for(i=0;i<10;i++)
//	{
//		if(i = 5)
//		{
//			printf("haha\n");
//		}
//		printf("hehe\n");
//	}
//	return 0;
//}



//int main()
//{
//	int i = 0;
//	//初始化  判断  调整
//	for(i=1;i<=10;i++)
//	{
//		if(5 == i)
//			//break;//1,2,3,4
//			continue;//1,2,3,4,6,7,8,9,10
//		printf("%d ", i);
//	}
//	return 0;
//}



//int main()
//{
//	int i = 1;//循环变量的初始化
//	
//	while(i<=10)//循环变量的判断
//	{
//		if(5 == i)
//			continue;//陷入死循环
//		printf("%d ", i);
//		//...
//		i++;//循环变量的调整
//	}
//	return 0;
//}



//int main()
//{
//	int ch = 0;
//	while((ch = getchar()))
//	{
//		if(ch <'0' || ch>'9')
//			continue ;
//		putchar(ch);
//	}
//	return 0;
//}



//int main()
//{
//	//int ch = 0;
//	////EOF - end of file 文件结束标志
//	//while((ch = getchar()) != EOF)
//	//{
//	//	putchar(ch);
//	//}
//	int ret = 0;
//	int ch = 0;
//	char password[20] = {0};
//	printf("请输入密码：>");
//	scanf("%s", password);//输入密码，并存放在password数组中
//	//缓冲区还剩余一个 '\n'
//	//读取一下 '\n'
//	while((ch =getchar()) != '\n');
//	{
//
//	}
//	printf("请确认（Y/N）:>");
//	ret = getchar();//N/Y
//	if(ret == 'Y')
//	{
//		printf("确认成功\n");
//	}
//	else
//	{
//		printf("放弃确认\n");
//	}
//
//	//printf("%d\n", '\n');
//	return 0;
//}
